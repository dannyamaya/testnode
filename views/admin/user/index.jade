extend ../layout
block content
    .col-xs-12.userTools.has-feedback
      .col-md-12.no-padding.userMaganementDesktop
        .titleUserManagement.no-padding
          h2.no-padding #{title}
        .pull-right
          form.form.col-xs-12.col-md-5.col-lg-4.no-padding.hidden-xs.hidden-sm#searchform(method="post" action="users")
              .input-group.search
                  input.form-control#search(type="text" aria-label="Search users" placeholder="Search")
                  span.input-group-addon
                      i.fa.fa-search            
          if user.role == 'admin'
              .dropdown.hidden-xs.hidden-sm(style="display:inline-block;")
                  button.btn.btn-adduser.btn-dropdown.dropdown-toggle(type="button" id="dropdownLocation" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true") Location
                      i.fa.fa-angle-down
                  ul.dropdown-menu(aria-labelledby="dropdownMenu1")
                      li
                          a.locationSearch(href="#") Lord Cochrane Santiago
                      li
                          a.locationSearch(href="#") Viña del Mar
                      li
                          a.locationSearch(href="#") Calle 18 Bogotá
                      li
                          a.locationSearch(href="#") Calle 21 Bogotá
                      li
                          a.locationSearch(href="#") Villa campestre Barranquilla
                      li.dropdown-header.cleanLocationSearch.pull-right Clear


          .dropdown.hidden-xs.hidden-sm(style="display:inline-block;")
              button.btn.btn-adduser.btn-dropdown.dropdown-toggle(type="button" id="dropdownRol" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true")
                  span Role
                  i.fa.fa-angle-down
              ul.dropdown-menu(aria-labelledby="dropdownMenu1")
                  li
                      a.roleSearch(href="#") Client Service
                  li
                      a.roleSearch(href="#") Maintenance
                  li
                      a.roleSearch(href="#") Marketing
                  li
                      a.roleSearch(href="#") Resident
                  li
                      a.roleSearch(href="#") Resident Assistant
                  li
                      a.roleSearch(href="#") Operation Manager
                  li.dropdown-header.cleanRoleSearch.pull-right Clear
          .dropdown.hidden-xs.hidden-sm.hidden-lg(style="display:inline-block")
            button.btn.btnManageUser.btn-dropdown.dropdown-toggle#dropdownMenu1(type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true")
              span(class="glyphicon glyphicon-option-vertical")
            ul.dropdown-menu.menuManageUser.col-xs-12.no-padding(aria-labelledby='dropdownMenu1')
              li
                a(href='#') Eliminar
                  i.fa.fa-trash
              li
                a(href='#') Editar
                  i.fa.fa-pencil-square-o
              li
                a(href='#') Descargar
                  i.fa.fa-download
          button.btn.btn-adduser.hidden-xs.hidden-sm.hidden-md.btnsManageUsers2(data-toggle="tooltip" data-placement="top" title="Delete" onclick='deleteUserModal()')
              i.fa.fa-trash
          button.btn.btn-default.btn-adduser.hidden-xs.hidden-sm.hidden-md.btnsManageUsers(data-toggle="tooltip" data-placement="top" title="Edit" onclick='updateUserModal()')
              i.fa.fa-pencil-square-o
          a.btn.btn-default.btn-adduser.hidden-xs.hidden-sm.hidden-md.btnsManageUsers(href="/api/users/export" target="_blank" data-toggle="tooltip" data-placement="top" title="Download")
              i.fa.fa-download               
          button.btn.btn-main.btn-livinn.hidden-xs.hidden-sm.btnsManageUsers(data-toggle="modal", data-target="#registrationModal", href="/#",data-dismiss="modal")
           span.hidden-xs Add User
              i.visible-xs.fa.fa-plus
      .col-xs-8.no-padding.pull-right.userSearch-Management.hidden-md.hidden-lg
        .col-xs-12.no-padding
          .col-xs-12.no-padding.form-group
            input.form-control.hidden-xs.hidden-sm(type='text', placeholder='Search')
            button.btn.btn-default#Filters(onclick='deployFilters()')
              span
                i.icon.ion-ios-search-strong

    .col-xs-12.no-padding.hidden-md.hidden-lg#userFilters.userFilters.userFiltersUp
            .col-xs-12.no-padding.clearFilters
              .col-xs-6.btnCloseFiltersMobile
                button.btn.btn-default(onclick='collapseFilters()')
                  span
                    i.icon.ion-ios-arrow-up
              .col-xs-6.btnClearFilters
                button.btn.btn-default.cleanRoleSearch.cleanLocationSearch Clear All
            .col-xs-12.no-padding.search-filtersMobile
              form.col-xs-12.navbar-left(action='' method='' type='')
                .form-group
                  input.form-control#searchMobile(type='text', placeholder='Search')
              ul.col-xs-12.no-padding.nav.navbar-nav
                li.col-xs-12.no-padding.dropdown
                  a.col-xs-12.dropdown-toggle.dropdownLocation(href='#' data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false") Location
                    span
                      i.icon.ion-ios-arrow-down
                  ul.col-xs-12.no-padding.dropdown-menu
                    li
                        a.locationSearch(href="#") Lord Cochrane Santiago
                    li
                        a.locationSearch(href="#") Viña del Mar
                    li
                        a.locationSearch(href="#") Calle 18 Bogotá
                    li
                        a.locationSearch(href="#") Calle 21 Bogotá
                    li
                        a.locationSearch(href="#") Villa campestre Barranquilla
                li.col-xs-12.no-padding.dropdown
                  a.col-xs-12.dropdown-toggle.dropdownRol(href='#' data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false") Role
                    span
                      i.icon.ion-ios-arrow-down
                  ul.col-xs-12.no-padding.dropdown-menu
                    li
                      a.roleSearch(href="#") Client Service
                    li
                        a.roleSearch(href="#") Maintenance
                    li
                        a.roleSearch(href="#") Marketing
                    li
                        a.roleSearch(href="#") Resident
                    li
                        a.roleSearch(href="#") Resident Assistant
                    li
                        a.roleSearch(href="#") Operation Manager



    .col-xs-12.content
      .panel-default.col-xs-12.no-padding
        .clearfix
        .table-responsive.panel-user
            table.table.hidden#userstable
                thead
                    tr
                        th.hidden-xs
                        th(style="min-width:33px;")
                        th First Name
                        th Last Name
                        th Email
                        th Document type
                        th Document
                        th Cellphone
                        th Role
                        if user.role == 'admin'
                            th City
                        th Created
                        th Updated
                        th Last Login
                tbody
            #loader
        .col-xs-12
            p.text-center#pages 1-10 de # Users
        nav#page-nav
            .text-center#page-selection
      button.btn.btn-livinn.hidden-md.hidden-lg.btn-addUserMobile(data-toggle='modal', data-target="#registrationModal", href="/#", data-dismiss="modal")
        i.icon.ion-plus
block modals


    <!-- User Read Modal -->
    .modal.fade#readModal(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true" )
        .modal-dialog.modal-lg
            .modal-content
                .modal-header
                    button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
                .modal-body
                    .row
                        .col-xs-12.col-sm-10.col-sm-offset-1
                                .col-xs-12.col-sm-6
                                    .form-group
                                        .preview.img-wrapper.img-preloaded#readProfileImage
                                    .form-group
                                        label(for='first')
                                            |   First Name
                                            span.requiredLivinn *
                                        p#firstRead
                                    .form-group
                                        label(for='last')
                                            |   Last Name
                                            span.requiredLivinn *
                                        p#lastRead
                                    .form-group.emailregistrationerror
                                        label(for='email') Email
                                        span.requiredLivinn *
                                        p#emailRead
                                .col-xs-12.col-sm-6
                                    .form-group
                                        label Role
                                        span.requiredLivinn *
                                        p#roleRead

                                    .form-group
                                        label Document Type
                                        span.requiredLivinn *
                                        p#doctypeRead

                                    .form-group
                                        label(for='document') Document
                                        span.requiredLivinn *
                                        p#documentRead
                                    .form-group.col-xs-12.col-sm-6.no-padding
                                        label Location
                                        span.requiredLivinn *
                                        p#locationRead

                                    .form-group.col-xs-12.col-sm-6.no-padding-right
                                        label Time Zone
                                        span.requiredLivinn *
                                        p#timezoneRead

                                    .form-group
                                        label(for='phone') Phone
                                        span.requiredLivinn *
                                        p#phoneRead
                                    .form-group.differentResident
                                        label(for='occupation') Ocuppation
                                        p#occupationRead
                                    .form-group.differentResident
                                        label(for='skype') Skype
                                        p#skypeRead
                                    .form-group.residentFields
                                        label(for='birthdate') Birth Date
                                        p#birthdateRead
                                .col-xs-12.no-padding.residentFields
                                    hr
                                    .form-group.col-sm-4
                                        label(for='numcontract')
                                            |   Contract Number
                                        span.requiredLivinn *
                                        p#numcontractRead
                                    .form-group.col-sm-4
                                        label(for='start')
                                            |   Start
                                            span.requiredLivinn *
                                        p#startRead
                                    .form-group.col-sm-4
                                        label(for='finish')
                                            |   Finish
                                            span.requiredLivinn *
                                        p#finishRead
                                    .form-group.col-sm-8
                                        label(for='rate') Agent
                                        span.requiredLivinn *
                                        p#agentRead
                                    .form-group.col-sm-4
                                        label Status
                                        p#statusRead

                                    .col-xs-12.no-padding
                                        .form-group.col-sm-4
                                            label(for='rate')
                                                |   Amount
                                                span.requiredLivinn *
                                            p#rateRead
                                        .form-group.col-sm-4
                                            label(for='currency')
                                                |   Currency
                                            span.requiredLivinn *
                                            p#currencyRead

                                        .form-group.col-sm-4
                                            label(for='rateusd') Amount USD
                                            p#rateusdRead
                                    hr.col-xs-12
                                    .form-group.col-sm-6
                                        label(for='apartment') Apartment
                                        span.requiredLivinn *
                                        p#apartmentRead
                                    .form-group.col-sm-6
                                        label(for='type') Apartment Type
                                        span.requiredLivinn *
                                        p#typeRead
                                    .form-group.col-sm-6
                                        label Bathroom
                                        p#bathroomRead(name="bathroom" )

                                    .form-group.col-sm-6
                                        label(for='bed') Bed
                                        p#bedRead


    <!-- User Registration Modal -->
    .modal.fade#registrationModal.registrationModal(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true" )
        .modal-dialog.modal-lg
            .modal-content
                .modal-header.gradienteLivinn
                  h3.text-center New User
                    button.close.hidden(type="button", data-dismiss="modal", aria-hidden="true") &times;
                .modal-body
                    .row
                        .col-xs-12.col-sm-10.col-sm-offset-1.no-padding
                            form#registrationForm(action="/api/users", method="post", role="form" enctype="multipart/form-data" data-parsley-validate)
                                .col-xs-12.col-md-6
                                    .form-group
                                        .preview.img-wrapper
                                          i.icon.ion-plus
                                        .file-upload-wrapper
                                                input.file-upload-native(type="file" name="image" accept="image/*" )
                                                input.file-upload-text(type="text" disabled placeholder="Upload profile photo")
                                    .form-group
                                        label(for='first')
                                            |   First Name
                                            span.requiredLivinn *
                                        input#first.form-control(type='text' name='first' placeholder='First Name' required='' autofocus='')
                                    .form-group
                                        label(for='last')
                                            |   Last Name
                                            span.requiredLivinn *
                                        input#last.form-control(type='text' name='last' placeholder='Last Name' required='' autofocus='')
                                    .form-group.emailregistrationerror
                                        label(for='email') Email
                                        span.requiredLivinn *
                                        input#email.form-control(type='text' placeholder='Email' name="email" required autofocus='')
                                .col-xs-12.col-md-6
                                    .form-group
                                        label Role
                                        span.requiredLivinn *
                                        .select
                                            select.roleSelect#roleCreate(name="role" required='')
                                                option(value="resident" selected=) Resident
                                                option(value="marketing") Marketing
                                                option(value="operation manager") Operation Manager
                                                option(value="maintenance") Maintenance
                                                option(value="client service") Customer Service
                                                option(value="resident assistant") Resident Assistant
                                    .form-group
                                        label Document Type
                                        span.requiredLivinn *
                                        .select
                                            select(name="doctype" required)
                                                option(value="") Choose a document type
                                                option(value="Cédula de ciudadania") Cédula de ciudadania
                                                option(value="Cédula de extranjeria") Cédula de extranjeria
                                                option(value="DNI") DNI
                                                option(value="Passport") Passport
                                                option(value="Tarjeta de identidad") Tarjeta de identidad
                                    .form-group
                                        label(for='document') Document
                                        span.requiredLivinn *
                                        input#document.form-control(type='text' name='document' placeholder='Document' required='' autofocus='')
                                    .form-group.col-md-6.no-padding
                                        label Location
                                        span.requiredLivinn *
                                        .select
                                            select(name="location" required='')
                                                if user.role == 'operation manager'
                                                    option(value="#{user.location}") #{user.location}
                                                else
                                                    option(value="") Choose a location
                                                    option(value="Villa Campestre Barranquilla") Barranquilla - Villa Campestre
                                                    option(value="Calle 18 Bogotá") Bogotá - Calle 18
                                                    option(value="Calle 21 Bogotá")  Bogotá - Calle 21
                                                    option(value="Lord Cochrane Santiago") Santiago - Lord Cochrane
                                                    option(value="Viña Del Mar") Viña Del Mar - Alvarez
                                    .form-group.col-sm-6.no-padding
                                        label Time Zone
                                        span.requiredLivinn *
                                        .select
                                            select(name="timezone" required='')
                                                option(value="") Choose time zone
                                                option(value="América/Santiago") América/Chile
                                                option(value="América/Bogotá") América/Colombia
                                    .form-group
                                        label(for='phone') Phone
                                        span.requiredLivinn *
                                        input#phone.form-control(type='text' name='phone' placeholder='Phone' required='' autofocus='')
                                    .form-group.differentResident
                                        label(for='occupation') Ocuppation
                                        input#occupation.form-control(type='text' name='occupation' placeholder='Occupation'  autofocus='' required='')
                                    .form-group.differentResident
                                        label(for='skype') Skype
                                        input#skype.form-control(type='text' name='skype' placeholder='Skype' autofocus='')
                                    .form-group.residentFields
                                        label(for='birthdate') Birth Date
                                        input#birthdate.form-control(type='text' name='birth_date' placeholder='YYYY-MM-DD'  autofocus='')
                                .col-xs-12.no-padding.residentFields
                                    hr
                                    .form-group.col-sm-4
                                        label(for='numcontract')
                                            |   Contract Number
                                            span.requiredLivinn *
                                        input#numcontract.form-control.inputResident(type='text' placeholder='Contract Number' required='' name="numcontract" autofocus='')
                                    .form-group.col-sm-4
                                        label(for='start')
                                            |   Start
                                            span.requiredLivinn *
                                        input#start.form-control.inputResident(type='text' name='start' placeholder='YYYY-MM-DD' autofocus='' required='')
                                    .form-group.col-sm-4
                                        label(for='finish')
                                            |   Finish
                                            span.requiredLivinn *
                                        input#finish.form-control.inputResident(type='text' name='finish' placeholder='YYYY-MM-DD'  autofocus='' required='')
                                    .form-group.col-sm-8
                                            label(for='rate') Agent
                                            span.requiredLivinn *
                                            input#agent.form-control.inputResident(type='text' name='agent' placeholder='Agent'  autofocus='' required='')
                                    .form-group.col-sm-4
                                        label Status
                                        .select
                                            select.inputResident(name="status")
                                                option(value="") Choose a status
                                                option(value="Reserved") Reserved
                                                option(value="In-house") In-house
                                    .col-xs-12.no-padding
                                        .form-group.col-sm-4
                                            label(for='rate')
                                                |   Amount
                                                span.requiredLivinn *
                                            input#rate.form-control.inputResident(type='text' name='rate' placeholder='Rate' autofocus='' required='')
                                        .form-group.col-sm-4
                                            label(for='currency')
                                                |   Currency
                                                span.requiredLivinn *
                                            .select
                                                select.inputResident(name="currency" required='')
                                                  option(value="") Choose a currency
                                                  option(value="CLP") CLP
                                                  option(value="COP") COP
                                        .form-group.col-sm-4
                                            label(for='rateusd') Amount USD
                                            input#rateusd.form-control.inputResident(type='text' name='rateusd' placeholder='Rate USD' autofocus='')
                                    hr.col-xs-12
                                    .form-group.col-sm-6
                                        label(for='apartment') Apartment
                                        span.requiredLivinn *
                                        input#apartment.form-control.inputResident(type='text' name='apartment' placeholder='Apartment'  autofocus='' required='')
                                    .form-group.col-sm-6
                                        label(for='type') Apartment Type
                                        span.requiredLivinn *
                                        input#type.form-control.inputResident(type='text' name='apartmentType' placeholder='Type'  autofocus='' required='')
                                    .form-group.col-sm-6
                                        label Bathroom
                                        .select
                                            select.inputResident(name="bathroom" )
                                                option(value="") Choose a bathroom
                                                option(value="single") Single
                                                option(value="shared") Shared
                                    .form-group.col-sm-6
                                        label(for='bed') Bed
                                        input#bed.form-control.inputResident(type='text' name='bed' placeholder='Bed' autofocus='')
                                    .col-sm-12


                                hr.col-xs-12
                                .form-group.col-xs-12.col-md-4.col-md-offset-8.btnsModal
                                    .text-center
                                      button.col-xs-4.col-xs-offset-2.btn.btn-livinn(type='submit') Register
                                      button.col-xs-4.btn.btn-white.btn-margin-right(data-dismiss="modal" aria-hidden="true") Cancel

    <!-- Update User Modal -->
    .modal.fade#updateUserModal(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
        .modal-dialog.modal-lg
            .modal-content
                .modal-header
                    button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
                    h3.modal-sm-title.text-center#updateModal_h ¿Do you want to update this user?
                .modal-body
                    .row
                        .col-xs-12.col-sm-10.col-sm-offset-1
                            form#updateForm(action="" method="" role="form" enctype="multipart/form-data" data-parsley-validate)

                                .col-xs-12.col-sm-6
                                    .form-group
                                        .preview.img-wrapper.img-preloaded#updateProfileImage
                                        .file-upload-wrapper
                                            input.file-upload-native#inputUpdateImage(type="file" name="image" accept="image/*" )
                                            input.file-upload-text(type="text" disabled placeholder="Change Profile Image")

                                    .form-group
                                        label(for='inputUpdateFirstname') First Name
                                        input#inputUpdateFirstname.form-control(type='text' name='first' placeholder='First Name' required='' autofocus='')
                                    .form-group
                                        label(for='inputUpdateLastname') Last Name
                                        input#inputUpdateLastname.form-control(type='text' name='last' placeholder='Last Name' required='' autofocus='')
                                    .form-group.emailregistrationerror
                                        label(for='inputUpdateEmail') Email
                                        input#inputUpdateEmail.form-control(type='text' placeholder='Email' name="email" required='' autofocus='')
                                .col-xs-12.col-sm-6
                                    .form-group
                                        label Role
                                        span.requiredLivinn *
                                        .select
                                            select#inputUpdateRole.roleSelect(name="role" required='')
                                                option(value="resident") Resident
                                                option(value="marketing") Marketing
                                                option(value="operation manager") Operation Manager
                                                option(value="maintenance") Maintenance
                                                option(value="client service") Client Service
                                                option(value="resident assistant") Resident Assistant
                                                option(value="admin") Super Admin

                                    .form-group
                                        label Document Type
                                        span.requiredLivinn *
                                        .select
                                            select#inputUpdateDocType(name="doctype" required='')
                                                option(value="") Choose a document type
                                                    option(value="Cédula de ciudadania") Cédula de ciudadania
                                                    option(value="Cédula de extranjeria") Cédula de extranjeria
                                                    option(value="DNI") DNI
                                                    option(value="Passport") Passport
                                                    option(value="Tarjeta de identidad") Tarjeta de identidad
                                    .form-group
                                        label(for='inputUpdateDoc') Document
                                        span.requiredLivinn *
                                        input#inputUpdateDoc.form-control(type='text' name='document' placeholder='Document' required='' autofocus='')
                                    .form-group.col-xs-12.col-sm-6.no-padding
                                        label Location
                                        span.requiredLivinn *
                                        .select
                                            select#inputUpdateLocation(name="location" required='')
                                                if user.role == 'operation manager'
                                                    option(value="#{user.location}") #{user.location}
                                                else
                                                    option(value="") Choose a location
                                                    option(value="Villa Campestre Barranquilla") Barranquilla - Villa Campestre
                                                    option(value="Calle 18 Bogotá") Bogotá - Calle 18
                                                    option(value="Calle 21 Bogotá")  Bogotá - Calle 21
                                                    option(value="Lord Cochrane Santiago") Santiago - Lord Cochrane
                                                    option(value="Viña Del Mar") Viña Del Mar - Alvarez
                                    .form-group.col-xs-12.col-sm-6.no-padding-right
                                        label Time Zone
                                        span.requiredLivinn *
                                        .select
                                            select#inputUpdateTimeZone(name="timezone" required='')
                                                option(value="América/Santiago") América/Santiago
                                                option(value="América/Bogotá") América/Bogotá
                                    .form-group
                                        label(for='inputUpdatePhone') Phone
                                        span.requiredLivinn *
                                        input#inputUpdatePhone.form-control(type='text' name='phone' placeholder='Phone' required='' autofocus='')

                                    .form-group.differentResident
                                        label(for='inputUpdateOccupation') Ocuppation
                                        input#inputUpdateOccupation.form-control(type='text' name='occupation' placeholder='Occupation'  autofocus='' required='')

                                    .form-group.differentResident
                                        label(for='inputUpdateSkype') Skype
                                        input#inputUpdateSkype.form-control(type='text' name='skype' placeholder='Skype' autofocus='')

                                    .form-group.residentFields
                                        label(for='inputUpdateBirthdate') Birth Date
                                        input#inputUpdateBirthdate.form-control(type='text' name='birthdate' placeholder='YYYY-MM-DD'  autofocus='')

                                .col-xs-12.no-padding.residentFields
                                    hr
                                    .form-group.col-sm-4
                                        label(for='inputUpdateContract') Contract Number
                                        span.requiredLivinn *
                                        input#inputUpdateContract.form-control.inputResidentUpdate(type='text' placeholder='Contract Number' name="numcontract" autofocus='' required='')
                                    .form-group.col-sm-4
                                        label(for='inputUpdateStart') Start
                                        span.requiredLivinn *
                                        input#inputUpdateStart.form-control.inputResidentUpdate(type='text' placeholder="YYYY-MM-DD" name='start' autofocus='' required='')
                                    .form-group.col-sm-4
                                        label(for='inputUpdateFinish') Finish
                                        span.requiredLivinn *
                                        input#inputUpdateFinish.form-control.inputResidentUpdate(type='text' placeholder="YYYY-MM-DD" name='finish' autofocus='' required='')
                                    .form-group.col-sm-8
                                        label(for='inputUpdateAgent') Agent
                                        span.requiredLivinn *
                                        input#inputUpdateAgent.form-control.inputResidentUpdate(type='text' name='agent' placeholder='Agent'  autofocus='' required='')
                                    .form-group.col-sm-4
                                        label Status
                                        .select#inputUpdateStatus
                                            select.inputResidentUpdate(name="status" required='')
                                                option(value="") Choose a status
                                                option(value="Booked") Booked
                                                option(value="In-house") In-house

                                .col-xs-12.no-padding.residentFields
                                    .form-group.col-sm-4
                                        label(for='inputUpdateRate') Amount
                                        span.requiredLivinn *
                                        input#inputUpdateRate.form-control.inputResidentUpdate(type='text' name='rate' placeholder='Rate' autofocus='' required='')
                                    .form-group.col-sm-4
                                        label(for='inputUpdateCurrency')
                                            |   Currency
                                            span.requiredLivinn *
                                        .select
                                            select#inputUpdateCurrency.inputResidentUpdate(name="currency" required='')
                                                option(value="") Choose a currency
                                                option(value="CLP") CLP
                                                option(value="COP") COP
                                    .form-group.col-sm-4
                                        label(for='inputUpdateRateusd') Amount USD
                                        input#inputUpdateRateusd.form-control.inputResidentUpdate(type='text' name='rateusd' placeholder='Rate USD' autofocus='' required='')
                                .col-xs-12.no-padding.residentFields
                                    hr
                                    .form-group.col-sm-6
                                        label(for='inputUpdateApartment') Apartment
                                        span.requiredLivinn *
                                        input#inputUpdateApartment.form-control.inputResidentUpdate(type='text' name='apartment' placeholder='Apartment'  autofocus='' required='')
                                    .form-group.col-sm-6
                                        label(for='inputUpdateApartmentType') Apartment Type
                                        span.requiredLivinn *
                                        input#inputUpdateApartmentType.form-control.inputResidentUpdate(type='text' name='apartmentType' placeholder='Type'  autofocus='' required='')
                                    .form-group.col-sm-6
                                        label Bathroom
                                        .select
                                            select#inputUpdateBathroom.inputResidentUpdate(name="bathroom")
                                                option(value="") Choose a bathroom
                                                option(value="single") Single
                                                option(value="shared") Shared
                                    .form-group.col-sm-6
                                        label(for='inputUpdateBed') Bed
                                        input#inputUpdateBed.form-control.inputResidentUpdate(type='text' name='bed' placeholder='Bed' autofocus='')
                                    .col-sm-12
                                        hr

                                .col-xs-12
                                    .form-group.col-sm-12.col-md-4.col-md-offset-8.no-padding
                                        .pull-right
                                            button.btn.pull-right.deleteBtn(data-dismiss="modal" aria-hidden="true") Cancel
                                            button.btn.btn-livinn#updateUserButton  Update

    <!-- Delete User Modal -->
    .modal.fade#deleteUserModal(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
        .modal-dialog
            .modal-content
                .modal-header
                    button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
                    .row
                        h3.col-xs-12.modal-title.text-center#deleteModal_h ¿Desea eliminar este usuario?
                .modal-body
                    h4.modal-title.text-danger.danger-modal.text-center.hidden#deleteError
                    form
                        p.text-center#deleteModal_p Toda la información de este usuario será eliminada del sistema.
                        br
                .modal-footer
                    a.btn.btn-danger.deleteBtn.btn-livinn(onclick='deleteUser()')  Eliminar
                    button.btn.pull-right.deleteBtn(data-dismiss="modal" aria-hidden="true") Cancelar


block scripts
    script(src="/js/jquery.bootpag.min.js")
    script(src="/js/parsley.min.js")
    script.

        if(!{user.role == 'admin'}){
            var showLocation = true;
        } else {
            var showLocation = false;
        }

        $(function() {
            function maskImgs() {
                //$('.img-wrapper img').imagesLoaded({}, function() {
                $.each($('.img-wrapper img'), function(index, img) {
                    var src = $(img).attr('src');
                    var parent = $(img).parent();
                    parent
                        .css('background', 'url(' + src + ') no-repeat center center')
                        .css('background-size', 'cover');
                    $(img).remove();
                });
                //});
            }

            var preview = {
                init: function() {
                    preview.setPreviewImg();
                    preview.listenInput();
                },
                setPreviewImg: function(fileInput) {
                    var path = $(fileInput).val();
                    var uploadText = $(fileInput).siblings('.file-upload-text');

                    if (!path) {
                        $(uploadText).val('');
                    } else {
                        path = path.replace(/^C:\\fakepath\\/, "");
                        $(uploadText).val(path);

                        preview.showPreview(fileInput, path, uploadText);
                    }
                },
                showPreview: function(fileInput, path, uploadText) {
                    var file = $(fileInput)[0].files;

                    if (file && file[0]) {
                        var reader = new FileReader();

                        reader.onload = function(e) {
                            var previewImg = $(fileInput).parents('.file-upload-wrapper').siblings('.preview');
                            var img = $(previewImg).find('img');

                            if (img.length == 0) {
                                $(previewImg).html('<img src="' + e.target.result + '" alt=""/>');
                            } else {
                                img.attr('src', e.target.result);
                            }

                            uploadText.val(path);
                            maskImgs();
                        }

                        reader.onloadstart = function() {
                            $(uploadText).val('uploading..');
                        }

                        reader.readAsDataURL(file[0]);
                    }
                },
                listenInput: function() {
                    $('.file-upload-native').on('change', function() {
                        preview.setPreviewImg(this);
                    });
                }
            };
            preview.init();
        });


        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })

        $(document).ready(function () {

            $('#page-selection').bootpag({
                total: 10,
                maxVisible: 5,
            }).on("page", function (event, num) {
                filterUsers(num);
            });

            filterUsers(1);

            $( "#start" ).datepicker({
                dateFormat: 'yy-mm-dd',
                changeMonth: true,
                changeYear: true,
                yearRange: '2017:2050',
                onClose: function () {
                  $(this).parsley().validate();
                }
            });

            $( "#inputUpdateStart" ).datepicker({
                dateFormat: 'yy-mm-dd',
                changeMonth: true,
                changeYear: true,
                yearRange: '2017:2050',
                onClose: function () {
                  $(this).parsley().validate();
                }
            });

            $( "#inputUpdateFinish" ).datepicker({
                dateFormat: 'yy-mm-dd',
                changeMonth: true,
                changeYear: true,
                yearRange: '2017:2050',
                onClose: function () {
                  $(this).parsley().validate();
                }
            });

            $( "#finish" ).datepicker({
                dateFormat: 'yy-mm-dd',
                changeMonth: true,
                changeYear: true,
                yearRange: '2017:2050',
                onClose: function () {
                  $(this).parsley().validate();
                }
            });


            $( "#birthdate" ).datepicker({
                dateFormat: 'yy-mm-dd',
                changeMonth: true,
                changeYear: true,
                yearRange: '1917:2000'
            });

            $( "#inputUpdateBirthdate" ).datepicker({
                dateFormat: 'yy-mm-dd',
                changeMonth: true,
                changeYear: true,
                yearRange: '1917:2000'
            });

        });


        $('#roleCreate').on('change', function (e) {
            var optionSelected = $("option:selected", this).val();
            if(optionSelected != 'resident'){
                $('.inputResident').prop('disabled', true);
                $('#occupation').prop('disabled', false);

            }else{
                $('#occupation').prop('disabled',true);
                $('.inputResident').prop('disabled', false);
            }
        });

        $('#inputUpdateRole').on('change', function (e) {
            var optionSelected = $("option:selected", this).val();
            if (optionSelected != 'resident') {
                $('.inputResidentUpdate').prop('disabled', true);
                $('#inputUpdateOccupation').prop('disabled', false);

            } else {
                $('#inputUpdateOccupation').prop('disabled', true);
                $('.inputResidentUpdate').prop('disabled', false);
            }
        });

        $('.differentResident').hide();
        $('#occupation').prop('disabled',true);

        $('#registrationForm').parsley({
            excluded: ' :disabled'
        });


        /*=== Create user ===*/
        $('#registrationForm').submit(function (evt) {
            evt.preventDefault();

            var url = $(this).attr("action");
            var formData = new FormData($('#registrationForm')[0]);


            $.ajax({
                type: "POST",
                url: url,
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.status == '409') {
                        $('#inputEmail').focus();
                        $('.emailregistrationerror').addClass('has-error');
                        warningAlert('Ya existe una cuenta registrada con este Email o número de Documento');
                    } else {
                        $('#registrationModal').modal('hide');
                        $('.residentFields').show();
                        document.getElementById("registrationForm").reset();
                        $("#userstable tbody").prepend("<tr class='hvr-grow-shadow'><td><input type='checkbox' value='" + response.users._id + "'></td><td style='width:33px;'><img class='img-circle table-profile-img' src='"+response.users.profile_picture + "'></td><td>" + response.users.email + "</td><td class='text-capitalize'>" + response.users.name.first + "</td><td class='text-capitalize'>" + response.users.name.last + "</td><td>"+ response.users.doc.typedoc +"</td><td>" + response.users.doc.number + "</td><td>" + response.users.phone.number + "</td><td>" + response.users.role + "</td><td>" + response.users.location + "</td><td>" + moment(response.users.created).format('YYYY-DD-MM') + "</td><td>" + moment(response.users.updated).format('YYYY-DD-MM') + "</td><td>" + moment(response.users.lastlogin).format('YYYY-DD-MM') + "</td></tr>");

                        successAlert("User created");

                        $('#registrationForm').parsley().reset();


                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    var message = XMLHttpRequest.responseJSON.message;
                    warningAlert(message);
                }
            });
        });

        /* Read users */
        function readUsers(page, search) {

            var p = page || 1;
            var s = search || '';

            var url = "/api/users?page=" + p + "&search=" + s;

            $.ajax({
                type: "GET",
                url: url,
                success: function (response) {
                    var total = parseInt(response.count / 10);
                    if (response.count % 10 != 0) {
                        total += 1;
                    }

                    var m = ((response.count % 10 != 0 && response.page == total) ? response.count % 10 : 10);

                    var a = 1 + (response.page - 1) * 10;
                    var b = m + (response.page - 1) * 10;
                    $('#pages').html(a + '-' + b + ' of ' + response.count + ' Users');
                    $('#page-selection').bootpag({total: total, maxVisible: 5});

                    var banned;
                    $("#userstable tbody tr").remove();
                    var location = '';
                    for (key = 0; key < response.users.length; key++) {

                        if (response.users[key].banned) {
                            banned = '<i class="fa fa-ban warning-color" aria-hidden="true"></i>';
                        } else {
                            banned = "";
                        }
                        var usd = ((response.users[key].usd) ? response.users[key].usd : 0);
                        var clp = ((response.users[key].clp) ? response.users[key].clp : 0);
                        if(showLocation){
                            location = "<td>" + response.users[key].location + "</td>";
                        } else {
                            location = "";
                        }
                        $("#userstable tbody").prepend("<tr class='hvr-grow-shadow'><td class='hidden-xs hidde-sm'><input type='checkbox' value='" + response.users[key]._id + "'></td><td style='min-width:33px;'><img class='img-circle table-profile-img' src='" + response.users[key].profile_picture + "'></td><td>" + response.users[key].name.first + "</td><td class='text-capitalize'>" + response.users[key].name.last + "</td><td class='text-capitalize'>" + response.users[key].email + "</td><td>" + response.users[key].doc.typedoc + "</td><td>" + response.users[key].doc.number + "</td><td>" + response.users[key].phone.number + "</td><td>" + response.users[key].role + "</td>"+location+"<td>" + moment(response.users[key].created).format('YYYY-DD-MM') + "</td><td>" + moment(response.users[key].updated).format('YYYY-DD-MM') + "</td><td>" + moment(response.users[key].lastlogin).format('YYYY-DD-MM') + "</td></tr>");
                    }

                    $('#loader').fadeOut("slow", function () {
                        $('#userstable').removeClass("hidden").fadeIn("slow");
                    });

                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    var message = XMLHttpRequest.responseJSON.message;
                    warningAlert(message);
                }
            });
        }

        /*=== Update user ==m=*/
        function updateUserModal() {
            document.getElementById("updateForm").reset();

            len = $('#userstable input:checkbox:checked').length;
            if (len == 0) {
                warningAlert('Please select one element for the update.');
            } else if (len == 1) {
                var id = $('input:checkbox:checked')[0].value;


                $.ajax({
                    type: "GET",
                    url: 'api/users/' + id,
                    success: function (response) {
                        $('#updateModal_h').html('¿Do you want to update the user <span class="text-capitalize">' + response.user.name.first + ' ' + response.user.name.last + '</span>?');
                        $('#updateProfileImage').css('background-image', 'url(' + response.user.profile_picture + ')');
                        $("#inputUpdateEmail").val(response.user.email);
                        $("#inputUpdateFirstname").val(response.user.name.first);
                        $("#inputUpdateLastname").val(response.user.name.last);
                        $("#inputUpdateDocType").val(response.user.doc.typedoc);
                        $("#inputUpdateDoc").val(response.user.doc.number);
                        $("#inputUpdatePhone").val(response.user.phone.number);
                        $("#inputUpdateRole").val(response.user.role);
                        $("#inputUpdateLocation").val(response.user.location);
                        $("#inputUpdateTimeZone").val(response.user.time_zone);
                        $("#inputUpdateOccupation").val(response.user.occupation);
                        $("#inputUpdateSkype").val(response.user.skype);

                        if ($("#inputUpdateRole").val() === 'resident') {
                            $('.residentFields').show();
                            $('.differentResident').hide();


                            $.ajax({
                                type: "GET",
                                url: 'api/residents/' + id,
                                success: function (response) {
                                    console.log(response);

                                    $("#inputUpdateContract").val(response.resident.contract_number);
                                    if(!typeof response.resident.birth_date == null )
                                        $("#inputUpdateBirthdate").val(response.resident.birth_date.substr(0,10));
                                    $("#inputUpdateApartment").val(response.resident.apartment);
                                    $("#inputUpdateApartmentType").val(response.resident.apartment_type);
                                    $("#inputUpdateRate").val(response.resident.rate);
                                    $("#inputUpdateBed").val(response.resident.bed);
                                    $("#inputUpdateCurrency").val(response.resident.currency);
                                    $("#inputUpdateRateusd").val(response.resident.rateusd);
                                    $("#inputUpdateAgent").val(response.resident.agent);
                                    $("#inputUpdateFinish").val(response.resident.finish.substr(0,10));
                                    $("#inputUpdateStart").val(response.resident.start.substr(0,10));
                                    $("#inputUpdateDuration").val(response.resident.duration);

                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    var message = XMLHttpRequest.responseJSON.message;
                                    if(XMLHttpRequest.status == 404){
                                        //No existe informacion de residente para este usuario
                                    }else{
                                        warningAlert(message);

                                    }

                                }
                            });
                        }else{
                            $('.residentFields').hide();
                            $('.differentResident').show();
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        var message = XMLHttpRequest.responseJSON.message;
                        warningAlert(message);
                    }
                });

                $('#updateUserModal').modal('show');
            }
            else {
                warningAlert('Only can update one user at time.');
            }
        }

        $('#updateUserButton').click(function(e){
            e.preventDefault();
            var users = [];

            if($('#inputUpdateRole').val() != 'resident'){
                $('.inputResidentUpdate').prop('disabled', true);
                $('#inputUpdateOccupation').prop('disabled', false);

            }else{
                $('.inputResidentUpdate').prop('disabled', false);
                $('#inputUpdateOccupation').prop('disabled', true);
            }

            $('#updateForm').parsley({
                excluded: ' :disabled'
            });

            $('#userstable input:checkbox:checked').each(function () {
                users.push($(this).val());
            });

            var formData = new FormData($('#updateForm')[0]);

            $.ajax({
                type: "PUT",
                data: formData,
                url: '/api/users/' + users[0],
                processData: false,
                contentType: false,
                success: function (response) {
                    console.log(response);
                    var userr;
                    $('input:checkbox:checked').each(function () {
                        userr = $(this).parents("tr");
                        $(this).attr('checked', false);
                    });

                    var tdPic = userr.children("td:nth-child(2)");
                    var tdEmail = userr.children("td:nth-child(3)");
                    var tdFirst = userr.children("td:nth-child(4)");
                    var tdLast = userr.children("td:nth-child(5)");
                    var tdTypeDoc = userr.children("td:nth-child(6)");
                    var tdDoc = userr.children("td:nth-child(7)");
                    var tdCellphone = userr.children("td:nth-child(8)");
                    var tdRol = userr.children("td:nth-child(9)");
                    var tdCity = userr.children("td:nth-child(10)");
                    var tdUpdated = userr.children("td:nth-child(11)");

                    tdPic.children().attr('src',response.user.profile_picture);
                    tdEmail.text(response.user.email);
                    tdTypeDoc.text(response.user.doc.typedoc);
                    tdDoc.text(response.user.doc.number);
                    tdFirst.text(response.user.name.first);
                    tdLast.text(response.user.name.last);
                    tdCellphone.text(response.user.phone.number);
                    tdRol.text(response.user.rol);
                    tdCity.text(response.user.location);
                    tdUpdated.text(moment(response.user.updated).format('YYYY-DD-MM'));

                    $('#updateUserModal').modal('hide');

                    successAlert('User has been updated');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    var message = XMLHttpRequest.responseJSON.message;
                    warningAlert(message);
                }
            });

        });

        /* Delete user */

        function deleteUserModal() {
            len = $('input:checkbox:checked').length;
            if (len == 0) {
                warningAlert('No has seleccionado ningun elemento para eliminar.');
            } else if (len == 1) {
                $('#deleteModal_h').html('').html('¿Desea eliminar este usuario?')
                $('#deleteModal_p').html('').html('Toda la información de este usuario será eliminada del sistema.');
                $('#deleteUserModal').modal('show');
            }
            else {
                $('#deleteModal_h').html('').html('¿Desea eliminar estos usuarios?')
                $('#deleteModal_p').html('').html('Toda la información de los usuarios seleccionados será eliminada del sistema.');
                $('#deleteUserModal').modal('show');
            }
        }

        function deleteUser() {

            var users = [];
            $('input:checkbox:checked').each(function () {
                users.push($(this).val());
            });

            $.ajax({
                type: "DELETE",
                data: {users: users},
                url: '/api/users',
                success: function (response) {
                    $('input:checkbox:checked').each(function () {
                        $(this).parents("tr").remove();
                    });
                    $('#deleteUserModal').modal('hide');
                    successAlert(message);
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    var message = XMLHttpRequest.responseJSON.message;
                    warningAlert(message);
                }
            });

        }

        function filterUsers(page) {
            var search = $('#search').val().trim();
            readUsers(page, search);
        }

        /*Search user*/

        $('#searchform').submit(function (event) {

            event.preventDefault();

            $('#userstable').fadeOut("fast", function () {
                $('#loader').fadeIn("fast");
                readUsers(1, $("#search").val());
            });
        });

        $('.differentResident').hide();

        $('.roleSelect').on('change', function () {
            if (this.value != 'resident') {
                $('.differentResident').show();
                $('.residentFields').hide();
            }
            else {
                $('.differentResident').hide();
                $('.residentFields').show();
            }
        });

        $('table').on('dblclick','tr',function(){
            var id = $(this).children().children().val();
            $("#profilePicture").attr('src', '');
            $.ajax({
                type: "GET",
                url: 'api/users/' + id,
                success: function (response) {
                    $('.readModalTitle').html('<span class="text-capitalize">' + response.user.name.first + ' ' + response.user.name.last + '</span>');
                    $('#readProfileImage').css('background-image', 'url(' + response.user.profile_picture + ')');

                    $("#profilePicture").attr('src',response.user.profile_picture);
                    $("#emailRead").text(response.user.email);
                    $("#firstRead").text(response.user.name.first);
                    $("#lastRead").text(response.user.name.last);
                    $("#doctypeRead").text(response.user.doc.typedoc);
                    $("#documentRead").text(response.user.doc.number);
                    $("#phoneRead").text(response.user.phone.number);
                    $("#roleRead").text(response.user.role);
                    $("#locationRead").text(response.user.location);
                    $("#timezoneRead").text(response.user.time_zone);
                    $("#occupationRead").text(response.user.occupation);
                    $("#skypeRead").text(response.user.skype);

                    if ($("#roleRead").text() === 'resident') {

                        $('.residentFields').show();
                        $('.differentResident').hide();


                        $.ajax({
                            type: "GET",
                            url: 'api/residents/' + id,
                            success: function (response) {

                                $("#numcontractRead").text(response.resident.contract_number);
                                $("#birthdateRead").text(response.resident.birth_date.substr(0, 10));
                                $("#apartmentRead").text(response.resident.apartment);
                                $("#typeRead").text(response.resident.apartment_type);
                                $("#rateRead").text(response.resident.rate);
                                $("#bathroomRead").text(response.resident.bathroom);
                                $("#bedRead").text(response.resident.bed);
                                $("#currencyRead").text(response.resident.currency);
                                $("#rateusdRead").text(response.resident.rateusd);
                                $("#agentRead").text(response.resident.agent);
                                $("#finishRead").text(response.resident.finish.substr(0, 10));
                                $("#startRead").text(response.resident.start.substr(0, 10));
                                $("#durationRead").text(response.resident.duration);
                                $("#statusRead").text(response.resident.status);

                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                var message = XMLHttpRequest.responseJSON.message;
                                warningAlert(message);
                            }
                        });
                    } else {
                        $('.residentFields').hide();
                        $('.differentResident').show();
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    var message = XMLHttpRequest.responseJSON.message;
                    warningAlert(message);
                }
            });

            $('#readModal').modal('show');

        });

        $('#search').on({
            focus: function () {
                $("#searchform .input-group-addon").addClass('focused');
            },

            blur: function () {
                $("#searchform .input-group-addon").removeClass('focused');
            }
        });

        $('.locationSearch').click(function(){

            var selectedLocation = $(this).html();
            $("#dropdownLocation").html(selectedLocation+'<i class="fa fa-angle-down"></i>');
            $(".dropdownLocation").html(selectedLocation+'<span><i class="fa fa-angle-down"></i></span>');

            $('#loader').fadeOut("slow", function () {
               $('#userstable').addClass("hidden").fadeIn("slow");
           });
            var search = $(this).text().trim();
            readUsers(1, search);

        });

        $('.roleSearch').click(function(){

            var selectedRole = $(this).html();
            $("#dropdownRol").html(selectedRole+'<i class="fa fa-angle-down"></i>');
            $(".dropdownRol").html(selectedRole+'<span><i class="fa fa-angle-down"></i></span>');

            $('#loader').fadeOut("slow", function () {
               $('#userstable').addClass("hidden").fadeIn("slow");
           });
            var search = $(this).text().trim();
            readUsers(1, search);

        });

        $('.cleanLocationSearch').click(function(){

            $("#dropdownLocation").html('Location<i class="fa fa-angle-down"></i>')
            $(".dropdownLocation").html('Location<span><i class="fa fa-angle-down"></i></span>');

            $('#loader').fadeOut("slow", function () {
               $('#userstable').addClass("hidden").fadeIn("slow");
            });
            readUsers(1, '');

        });

        $('.cleanRoleSearch').click(function(){

            $("#dropdownRol").html('Role<i class="fa fa-angle-down"></i>')
            $(".dropdownRol").html('Role<span><i class="fa fa-angle-down"></i></span>')

            $('#loader').fadeOut("slow", function () {
               $('#userstable').addClass("hidden").fadeIn("slow");
           });
            readUsers(1, '');

        });


        //Search Mobi
        $('#searchMobile').keypress(function(){
            $('#userstable').fadeOut("fast", function () {
                $('#loader').fadeIn("fast");
                readUsers(1, $("#searchMobile").val());
            });
        });

        $('#searchMobile').keyup(function (e) {
            if(e.keyCode == 8){
                $('#userstable').fadeOut("fast", function () {
                    $('#loader').fadeIn("fast");
                    readUsers(1, $("#searchMobile").val());
                });
            };
        });





            //Export users
        function exportUsers(){
            var search = $('#search').val().trim();
            window.open('/api/users/export?search='+search,'_blank');
        }

        // Enables datepicker select in modal
        var enforceModalFocusFn = $.fn.modal.Constructor.prototype.enforceFocus;
        $.fn.modal.Constructor.prototype.enforceFocus = function() {};
        $confModal.on('hidden', function() {
          $.fn.modal.Constructor.prototype.enforceFocus = enforceModalFocusFn;
        });
        $confModal.modal({ backdrop : false });





